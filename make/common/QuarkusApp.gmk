MAVEN_ARGS ?=
VERBOSE_GC ?=
QB ?= main

application_properties = $(APP_DIR)/src/main/resources/application.properties
container_args += -Dquarkus.native.container-build=true
container_args += -Dquarkus.native.container-runtime=podman
container_args += -Dquarkus.container-image.build=true
debuginfo = $(runner).debug
debuginfo_args := -H:-DeleteLocalSymbols,-H:-OmitInlinedMethodDebugLineInfo
graalvm_version_cmd = strings $(runner) | grep GraalVM
jar = $(target)/quarkus-app/quarkus-run.jar
jcmd = $(GRAALVM_HOME)/bin/jcmd
native_build_args =
pom = $(APP_DIR)/pom.xml
runner = $(target)/$(APP_NAME)-1.0.0-SNAPSHOT-runner

ifdef MAVEN_ARGS
  mvnw_package += $(foreach arg,$(MAVEN_ARGS),$(arg))
endif

ifdef NATIVE_BUILD_ARGS
  native_build_args = $(NATIVE_BUILD_ARGS)
  debuginfo_args := $(debuginfo_args),$(NATIVE_BUILD_ARGS)
endif

ifdef RUN_ARGS
  run_args += $(foreach arg,$(RUN_ARGS),$(arg))
endif

ifdef XMX
  run_args += -Xmx$(XMX)
else
  run_args += -Xmx64m
endif

run_jvm_opts += $(run_args)

ifeq ($(VERBOSE_GC),1)
  run_args += -XX:+PrintGC
else ifeq ($(VERBOSE_GC),2)
  run_args += -XX:+PrintGC
  run_args += -XX:+VerboseGC
else ifeq ($(VERBOSE_GC),3)
  run_args += -XX:+PrintGC
  run_args += -XX:+VerboseGC
  run_args += -XX:+PrintGCTimes
else ifeq ($(VERBOSE_GC),4)
  run_args += -XX:+PrintGC
  run_args += -XX:+VerboseGC
  run_args += -XX:+PrintGCTimes
  run_args += -XX:+TraceHeapChunks
endif

ifdef JVM_DEBUG
  run_jvm_opts += -agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=*:5005
endif

ifdef TMPDIR
  tmp_dir = $(TMPDIR)
else
  tmp_dir = /tmp
endif

ifdef JFR
  mvnw_package += -Dquarkus.native.monitoring=jfr
endif

ifdef NO_OPT
  debuginfo_args := $(debuginfo_args),-O0,-H:+SourceLevelDebug
endif

ifeq ($(UBI),8)
  container_args += -Dquarkus.native.builder-image=quay.io/quarkus/ubi-quarkus-mandrel-builder-image:jdk-21
else
  container_args += -Dquarkus.native.builder-image=quay.io/quarkus/ubi9-quarkus-mandrel-builder-image:jdk-21
endif

ifdef APP_DIR
  image_name = $(APP_DIR)
  container_args += -Dquarkus.container-image.name=$(image_name)
else
  image_name = $(APP_NAME)
endif

ifdef BUILDER_IMAGE
  container_args += -Dquarkus.native.builder-image=$(BUILDER_IMAGE)
endif

run: $(runner) print-graalvm-version
> $< $(run_args)
.PHONY: run

print-graalvm-version:
> strings $(runner) | grep GraalVM
.PHONY: print-graalvm-version

run-jvm: $(jar)
> $(GRAALVM_HOME)/bin/java $(run_jvm_opts) -jar $<
.PHONY: run-jvm

run-jvm-native-agent: $(jar) $(libnative-image-agent)
> $(GRAALVM_HOME)/bin/java $(run_jvm_opts) -agentlib:native-image-agent=config-output-dir=$(target)/native-image-config -jar $<
.PHONY: run-jvm-native-agent

run-dev:
> cd $(APP_DIR)
> $(mvnw_cmd) quarkus:dev
.PHONY: run-dev

run-debug: $(debuginfo)
> $(runner) $(run_args)
.PHONY: run-debug

run-gdb: $(debuginfo)
> gdb --args $(runner) $(run_args)
.PHONY: run-debug

run-container:
> podman run -i --rm -p 8080:8080 localhost/$(USER)/$(image_name):1.0.0-SNAPSHOT
.PHONY: run-container

bash-container:
> podman run -ti --rm --entrypoint /bin/bash -p 8080:8080 localhost/$(USER)/$(image_name):1.0.0-SNAPSHOT
.PHONY: bash-container

build: $(runner)
.PHONY: build

build-container: $(pom) $(java) $(mvnw)
> cd $(APP_DIR)
> $(mvnw_cmd) quarkus:add-extension -Dextensions='container-image-podman'
> $(mvnw_package) $(container_args) -Dnative -Dquarkus.native.additional-build-args=$(native_build_args)
.PHONY: build-container

build-image:
> podman build \
>  --build-arg RHSM_USERNAME="${RHSM_USERNAME}" \
>  --build-arg RHSM_PASSWORD="${RHSM_PASSWORD}" \
>   -f $(TOPDIR)/make/common/$(DOCKERFILE) \
>   -t $(USER)/$(IMAGE_NAME):1.0 \
>   $(APP_DIR)
.PHONY: build-image

verify: $(pom) $(native_image)
> $(mvnw_cmd) verify -Dnative
.PHONY: verify

verify-jvm: $(pom)
> $(mvnw_cmd) verify
.PHONY: verify-jvm

$(runner): $(pom) $(native_image)
> cd $(APP_DIR)
> $(mvnw_package) -Dnative -Dquarkus.native.additional-build-args=$(native_build_args)

# Make sure dependency sources are downloaded before doing the packaging
$(debuginfo): $(pom) $(native_image)
> cd $(APP_DIR)
> $(mvnw_cmd) dependency:sources
> $(mvnw_package) -Dnative -Dquarkus.native.debug.enabled -Dquarkus.native.additional-build-args=$(debuginfo_args)

$(jar): $(pom) $(java) $(mvnw)
> cd $(APP_DIR)
> $(mvnw_package)

$(pom):
> pushd $(tmp_dir)
> rm -drf quarkus-quickstarts || true
> git clone https://github.com/quarkusio/quarkus-quickstarts
> cd quarkus-quickstarts
> git checkout $(QB)
> popd
> cp -r $(tmp_dir)/quarkus-quickstarts/$(APP_NAME) .
> mv $(APP_NAME) $(APP_DIR)

clean-app:
> rm -drf $(APP_DIR)
.PHONY: clean-app

rss:
> ps -p $$(pidof $(APP_NAME)-1.0.0-SNAPSHOT-runner) -o rss=
.PHONY: rss

add-app-property:
> echo $(APP_PROPERTY) > $(application_properties)
.PHONY: add-application-property

ni-profile: $(runner)
> cd $(target)/*-native-image-source-jar
> ../../../$(TOPDIR)/make/common/ni-profile.sh $(ID) $(NIP_EVENT) $(NIP_FORMAT)
.PHONE: ni-profile

ni-record: $(runner)
> cd $(target)/*-native-image-source-jar
> ../../../$(TOPDIR)/make/common/ni-record.sh $(ID) $(NIR_EVENT)
.PHONE: ni-record
