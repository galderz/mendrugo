jar = $(target)/quarkus-app/quarkus-run.jar
java = $(java_home)/bin/java
native_build_args += -Dnative
pom = $(app)/pom.xml
runner = $(target)/$(app)-1.0.0-SNAPSHOT-runner
run_args += -Xmx128m
jvm_args = $(run_args)

ifdef DEBUG
  mvn_package += dependency:sources
  native_build_args += -Dquarkus.native.debug.enabled
  native_build_args += -Dquarkus.native.additional-build-args=-H:-OmitInlinedMethodDebugLineInfo
endif

ifdef NB_ARGS
  native_build_args += -Dquarkus.native.additional-build-args=$(NB_ARGS)
endif

ifeq ($(VERBOSE_GC),1)
  run_args += -XX:+PrintGC
  run_args += -XX:+PrintGCTimeStamps
else ifeq ($(VERBOSE_GC),2)
  run_args += -XX:+PrintGC
  run_args += -XX:+PrintGCTimeStamps
  run_args += -XX:+VerboseGC
else ifeq ($(VERBOSE_GC),3)
  run_args += -XX:+PrintGC
  run_args += -XX:+VerboseGC
  run_args += -XX:+PrintHeapShape
else ifeq ($(VERBOSE_GC),4)
  run_args += -XX:+PrintGC
  run_args += -XX:+VerboseGC
  run_args += -XX:+PrintHeapShape
  run_args += -XX:+TraceHeapChunks
endif

run: $(runner)
> $< $(run_args)
.PHONY: run

run-jvm: $(jar)
> $(java) $(jvm_args) -jar $<
.PHONY: run-jvm

$(runner): $(pom) $(sources)
> cd $(app)
> $(mvn_package) $(native_build_args)

$(jar): $(pom) $(sources)
> cd $(app)
> $(mvn_package)

clean-app:
> rm -drf $(app)
.PHONY: clean-app

### perf

event := syscalls:sys_enter_mmap
fg_home := /opt/FlameGraph
flamegraph = $(fg_home)/flamegraph.pl
perf_data = $(target)/perf.data
stacks = $(target)/out.stacks
stackcollapse_perf = $(fg_home)/stackcollapse-perf.pl
strace = $(target)/strace.log
svg = $(target)/out.svg
perf_trace = $(target)/perf-trace.log

record: $(runner)
> sudo perf record -e $(event) --call-graph dwarf -o $(perf_data) -- taskset -c 1 $< $(run_args)
.PHONY: record

trace: $(runner)
> sudo perf trace -e $(event) --call-graph dwarf -o $(perf_trace) -- taskset -c 1 $< $(run_args)
.PHONY: trace

flamegraph:
> sudo chown $(USER) $(perf_data)
> perf script -i $(perf_data) > $(stacks)
> $(stackcollapse_perf) < $(stacks) | $(flamegraph) \
>   --color=mem \
>   --title="mmap Flame Graph" \
>   --countname="calls" > $(svg)
.PHONY: flamegraph

### strace

# Can be filtered by passing the syscall to trace, e.g. -emmap
strace: $(runner)
> taskset -c 1 strace -o $(strace) -k $< $(run_args)
.PHONY: strace
